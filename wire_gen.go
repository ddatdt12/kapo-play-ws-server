// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/ddatdt12/kapo-play-ws-server/clients/answer"
	"github.com/ddatdt12/kapo-play-ws-server/clients/game"
	"github.com/ddatdt12/kapo-play-ws-server/infras/db"
	"github.com/ddatdt12/kapo-play-ws-server/internal/protocols/http"
	"github.com/ddatdt12/kapo-play-ws-server/internal/protocols/http/ws"
	"github.com/ddatdt12/kapo-play-ws-server/src/handlers"
	"github.com/ddatdt12/kapo-play-ws-server/src/repositories"
	"github.com/ddatdt12/kapo-play-ws-server/src/services"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitHttpProtocol() *http.HttpImpl {
	redisImpl := db.NewRedisClient()
	gameRepository := repositories.NewGameRepository(redisImpl)
	gameGameClient := game.NewGameClient()
	gameService := services.NewGameService(gameRepository, redisImpl, gameGameClient)
	userRepository := repositories.NewUserRepository(redisImpl)
	userService := services.NewUserService(userRepository, gameRepository)
	questionRepository := repositories.NewQuestionRepository(redisImpl)
	leaderboardService := services.NewLeaderboardService(redisImpl)
	answerAnswerClient := answer.NewAnswerClient()
	answerService := services.NewAnswerService(redisImpl, leaderboardService, answerAnswerClient)
	questionService := services.NewQuestionService(questionRepository, gameService, userService, leaderboardService, answerService)
	hub := ws.NewHub(gameService, userService, questionService, leaderboardService)
	httpHandlerImpl := handlers.NewHttpHandler(gameService)
	httpImpl := http.NewHttpProtocol(hub, httpHandlerImpl)
	return httpImpl
}

// wire.go:

var questionRepo = wire.NewSet(repositories.NewQuestionRepository, wire.Bind(
	new(repositories.IQuestionRepository),
	new(*repositories.QuestionRepository),
),
)

var questionSvc = wire.NewSet(services.NewQuestionService, wire.Bind(
	new(services.IQuestionService),
	new(*services.QuestionService),
),
)

var leaderboardSvc = wire.NewSet(services.NewLeaderboardService, wire.Bind(
	new(services.ILeaderboardService),
	new(*services.LeaderboardService),
),
)

var gameRepo = wire.NewSet(repositories.NewGameRepository, wire.Bind(
	new(repositories.IGameRepository),
	new(*repositories.GameRepository),
),
)

var gameSvc = wire.NewSet(services.NewGameService, wire.Bind(
	new(services.IGameService),
	new(*services.GameService),
),
)

var userRepo = wire.NewSet(repositories.NewUserRepository, wire.Bind(
	new(repositories.IUserRepository),
	new(*repositories.UserRepository),
),
)

var userSvc = wire.NewSet(services.NewUserService, wire.Bind(
	new(services.IUserService),
	new(*services.UserService),
),
)

var answerSvc = wire.NewSet(services.NewAnswerService, wire.Bind(
	new(services.IAnswerService),
	new(*services.AnswerService),
),
)

var answerClient = wire.NewSet(answer.NewAnswerClient, wire.Bind(
	new(answer.IAnswerClient),
	new(*answer.AnswerClient),
),
)

var gameClient = wire.NewSet(game.NewGameClient, wire.Bind(
	new(game.IGameClient),
	new(*game.GameClient),
),
)
